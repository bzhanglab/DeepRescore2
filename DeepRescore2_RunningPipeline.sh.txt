# Input

## Public params

home_path = '/home/DeepRescore2'
cd home_path

id_File = "./InputData/combined" // Search engine identifications
ms_Folder = "./InputData/MGF" // MGF files folder
ms_File = "./InputData/01CPTAC_UCEC_P_PNNL_20170922_B1S1.mgf" // Merged MGF file
raw_File = "./InputData/RAW" // RAW file folder
fasta_File = "./InputData/swiss_prot_human_20190214_target_conts.fasta_td.fasta" // Fasta file
se = "maxquant" // Search engine type. The current version supports four search engines, msgf, xtandem, comet or maxquant.
decoy_prefix = "XXX_"
script_Folder = "sh"
output_Folder = "./OutputData"
tmp_Folder = "./tmp"

## Search engine specific params

if (software == "msgf") {
    rt = 5 // Step 1 parameter
} else if (software == "xtandem") {
    rt = 2 // Step 1 parameter
} else if (software == "comet") {
    rt = 2 // Step 1 parameter
} else if (software == "maxquant") {
    rt = 5 // Step 1 parameter
} else {
    println "Search engine ${software} is not supported!\n"
    helpMessage()
    exit 0
}


# Running scripts

## Step 1: Extract features from peptide identifications: sh 1.Features.sh

java -Xmx200g -jar ${script_Folder}/PDV-1.6.1.beta.features-jar-with-dependencies.jar \
        	  -r ${id_File} \
        	  -rt ${rt} \
        	  -s ${ms_File} \
        	  -st 1 \
        	  -i * \
        	  -k s \
        	  -o ${output_Folder} \
        	  -a 0.02 \
        	  -c 0 \
        	  -decoy ${decoy_prefix} \
        	  -ft pdf \
        	  --feature

python ${script_Folder}/${se}/AddModifedSequence.py ${output_Folder}/features.txt ${ms_File} ${output_Folder}/features.txt

## Step 2: Phosphosite localization using PhosphoRS: sh PhosphoRS.sh

mkdir -p ${tmp_Folder}/TXT ${tmp_Folder}/xml ${tmp_Folder}/Results ${tmp_Folder}/Results_AddIsoformSequence

### Step 2.1 Generate PhosphoRS input

python ${script_Folder}/${se}/GeneratePhosphoRSCSVFile.py ${output_Folder}/features.txt ${tmp_Folder}/TXT
Rscript ${script_Folder}/${se}/generate_phosphoRS_input_xml_folder.R ${tmp_Folder}/TXT ${ms_Folder} ${tmp_Folder}/xml

### Step 2.2 Run PhosphoRS

mono ${script_Folder}/PhosphoRS.exe -i ${tmp_Folder}/data.xml -o ${tmp_Folder}/Results/data.csv // If PhosphoRS can work on Linux

### Step 2.3 Add probability to feature matrix

python ${script_Folder}/${se}/AddIsoformSequenceForPhosphoRSResults.py ${tmp_Folder}/TXT ${tmp_Folder}/Results ${output_Folder}/features.txt ${tmp_Folder}/Results_AddIsoformSequence ${output_Folder}/features2.txt

python ${script_Folder}/${se}/CombinePhosphoRSResults.py ${tmp_Folder}/Results_AddIsoformSequence ${tmp_Folder}/PhosphoRS.txt

Rscript ${script_Folder}/${se}/combine_features_withlocalization.R ${output_Folder}/features2.txt ${tmp_Folder}/PhosphoRS.txt ${output_Folder}/features.PhosphoRS.txt

python ${script_Folder}/${se}/GetPhosphoRSSiteProbability.py ${output_Folder}/features.PhosphoRS.txt ${output_Folder}/features.PhosphoRS.txt

## Step 3: Sequence quality control using PGA: sh PGA.sh

mkdir -p ${tmp_Folder}/peptide_level ${tmp_Folder}/psm_level

docker run -it --rm -u $(id -u):$(id -g) -v ${home_path}:/opt/ -t proteomics/pga:latest Rscript ${script_Folder}/${se}/got_pga_input.R ${output_Folder}/features.PhosphoRS.txt ${se} ${tmp_Folder}/pga-rawPSMs.txt

docker run -it --rm -u $(id -u):$(id -g) -v ${home_path}:/opt/ -t proteomics/pga:latest Rscript ${script_Folder}/${se}/calculate_fdr.R ${tmp_Folder} pga ${fasta_File} ${decoy_prefix} FALSE

## Step 4: Generate train and prediction datasets: sh generate_train_prediction.sh

mkdir -p ${tmp_Folder}/autoRT_train ${tmp_Folder}/autoRT_prediction ${tmp_Folder}/pDeep3_train ${tmp_Folder}/pDeep3_prediction

Rscript ${script_Folder}/${se}/got_train_prediction.R ${tmp_Folder}/peptide_level/pga-peptideSummary.txt ${tmp_Folder}/psm_level/pga-peptideSummary.txt ${output_Folder}/features.PhosphoRS.txt ${tmp_Folder}/autoRT_train/ ${tmp_Folder}/autoRT_prediction/ ${tmp_Folder}/pDeep3_train/ ${tmp_Folder}/pDeep3_prediction/ ${tmp_Folder}/pga-rawPSMs.txt ${tmp_Folder}/PhosphoRS.txt

## Step 5: RT prediction using AutoRT: sh AutoRT.sh

mkdir -p ${tmp_Folder}/autoRT_Results ${tmp_Folder}/autoRT_Results/tf_model ${tmp_Folder}/autoRT_Results/tf_prediction

python ${script_Folder}/AutoRT/autort.py train -i ${tmp_Folder}/autoRT_train/auto_rt_train.txt -o ${tmp_Folder}/autoRT_Results/tf_model/ -e 40 -b 64 -u m -m ${script_Folder}/AutoRT/models/ptm_base_model/phosphorylation_sty/model.json -rlr -n 10 -g 6

python ${script_Folder}/AutoRT/autort.py predict -t ${tmp_Folder}/autoRT_prediction/auto_rt_prediction.Phospho.txt -s ${tmp_Folder}/autoRT_Results/tf_model/model.json -o ${tmp_Folder}/autoRT_Results/tf_prediction/ -p phospho.prediction

python ${script_Folder}/AutoRT/autort.py predict -t ${tmp_Folder}/autoRT_prediction/auto_rt_prediction.nonPhospho.txt -s ${tmp_Folder}/autoRT_Results/tf_model/model.json -o ${tmp_Folder}/autoRT_Results/tf_prediction/ -p nonPhospho.prediction

## Step 6: Spectrum prediction using pDeep3: sh pDeep3.sh

mkdir -p ${tmp_Folder}/pLabel

python ${script_Folder}/${se}/generate_pLabel_parameters.py ${tmp_Folder}/pDeep3_train/pdeep3_train.txt ${raw_File} ${tmp_Folder}/pLabel ${tmp_Folder}/pLabelParams.cfg ${tmp_Folder}/Train.Phospho.cfg ${tmp_Folder}/pDeep3_prediction/pdeep3_prediction.Phospho.txt ${tmp_Folder}/TrainingData.psmlabel ${tmp_Folder}/TrainingData.psmlabel ${tmp_Folder}/Train.nonPhospho.cfg ${tmp_Folder}/pDeep3_prediction/pdeep3_prediction.nonPhospho.txt

cd ${script_Folder}/psmLabel

mono psmLabel.exe ${tmp_Folder}/pLabelParams.cfg

python ${script_Folder}/${se}/CombinepLabelFiles.py ${tmp_Folder}/pLabel ${tmp_Folder}/TrainingData.psmlabel

python ${script_Folder}/Run/run.py ${tmp_Folder}/Train.Phospho.cfg ${tmp_Folder}/pDeep3_Predict.Phospho.txt

python ${script_Folder}/Run/run.py ${tmp_Folder}/Train.nonPhospho.cfg ${tmp_Folder}/pDeep3_Predict.nonPhospho.txt

cd ${script_Folder}/SpectralEntropy

python setup.py build_ext --inplace

python program.py ${tmp_Folder}/pDeep3_prediction/pdeep3_prediction.Phospho.txt ${ms_File} ${tmp_Folder}/pDeep3_Predict.Phospho.txt ${tmp_Folder}/pDeep3PredictionResults.Phospho.txt

python program.py ${tmp_Folder}/pDeep3_prediction/pdeep3_prediction.nonPhospho.txt ${ms_File} ${tmp_Folder}/pDeep3_Predict.nonPhospho.txt ${tmp_Folder}/pDeep3PredictionResults.nonPhospho.txt

## Step 7: Deep-relocalization: sh DeepLocalization.sh

Rscript ${script_Folder}/calculate_localization_probability_entropy.R ${tmp_Folder}/PhosphoRS.txt ${tmp_Folder}/autoRT_Results/tf_prediction/phospho.prediction.tsv ${tmp_Folder}/pDeep3PredictionResults.Phospho.txt ${output_Folder}/features.PhosphoRS.txt ${output_Folder}/Features.Localization.entropy.txt

## Step 8: Rescoring using Percolator: sh Percolator.sh

mkdir -p ${tmp_Folder}/PercolatorInput {output_Folder}/PercolatorResults {output_Folder}/weights

Rscript ${script_Folder}/${se}/format_percolator_input_Method7_RTRatio.R {output_Folder}/Features.Localization.entropy.txt ${tmp_Folder}/pga-rawPSMs.txt ${tmp_Folder}/PercolatorInput/DeepRescore2.pin ${se} ${tmp_Folder}/PhosphoRS.txt ${tmp_Folder}/pDeep3PredictionResults.Phospho.txt ${tmp_Folder}/pDeep3PredictionResults.nonPhospho.txt ${tmp_Folder}/autoRT_Results/tf_prediction/phospho.prediction.tsv ${tmp_Folder}/autoRT_Results/tf_prediction/nonPhospho.prediction.tsv

docker run -it --rm -u $(id -u):$(id -g) -v ${home_path}:/data/ -t bzhanglab/percolator:3.4 percolator ${tmp_Folder}/PercolatorInput/DeepRescore2.pin -r ${output_Folder}/PercolatorResults/DeepRescore2.pep.txt -m ${output_Folder}/PercolatorResults/DeepRescore2.psms.txt -w ${output_Folder}/weights/DeepRescore2.txt -M ${output_Folder}/PercolatorResults/DeepRescore2.decoy.psms.txt


## Step 9: TMT quantification for TMT dataset

### Step 9.1: GetIonIntensity

mkdir -p ${tmp_Folder}/MASIC_Results ${output_Folder}/QuantificationResults

python ${script_Folder}/generate_MASCIParameters.py ${raw_File} ${script_Folder}/Run_MASCI.sh ${tmp_Folder}/MASIC_Results ${script_Folder}/MASCI/MASIC_Console.exe ${script_Folder}/TMT10_LTQ-FT_10ppm_ReporterTol0.003Da_2014-08-06.xml\"

sh ${script_Folder}/Run_MASCI.sh

Rscript ${script_Folder}/GetDeepRescore2PhosphoRSResults.R ${tmp_Folder}/psm_level/pga-peptideSummary.txt ${output_Folder}/Features.Localization.entropy.txt ${output_Folder}/PercolatorResults/DeepRescore2.psms.txt ${output_Folder}/QuantificationResults/PhosphoRS.results.txt ${output_Folder}/QuantificationResults/DeepRescore2.results.txt

python ${script_Folder}/AddModificationToResults.py  ${output_Folder}/QuantificationResults/PhosphoRS.results.txt  ${output_Folder}/QuantificationResults/PhosphoRS.results.AdjustModification.txt ${output_Folder}/QuantificationResults/DeepRescore2.results.txt ${output_Folder}/QuantificationResults/DeepRescore2.results.AdjustModification.txt

Rscript ${script_Folder}/GetIonIntensity_PhosphoRS.R ${tmp_Folder}/MASIC_Results ${output_Folder}/QuantificationResults/PhosphoRS.results.AdjustModification.txt ${output_Folder}/QuantificationResults/PhosphoRS.Intensity.txt

Rscript ${script_Folder}/GetIonIntensity_DeepRescore2.R ${tmp_Folder}/MASIC_Results ${output_Folder}/QuantificationResults/DeepRescore2.results.AdjustModification.txt ${output_Folder}/QuantificationResults/DeepRescore2.Intensity.txt

### Step 9.2: Quantification

mkdir -p ${output_Folder}/PSMLevelResults/PhosphoRS ${output_Folder}/PSMLevelResults/DeepRescore2 ${output_Folder}/PSMLevelResults/DeepRescore2_Remove_SharedPeptides ${output_Folder}/PSMLevelResults/PhosphoRS_Remove_SharedPeptides

cp ${output_Folder}/PhosphoRS.Intensity.txt ${output_Folder}/PSMLevelResults/PhosphoRS/PhosphoRS.Intensity.txt

cp ${output_Folder}/QuantificationResults/DeepRescore2.Intensity.txt ${output_Folder}/PSMLevelResults/DeepRescore2/DeepRescore2.Intensity.txt

python ${script_Folder}/RemoveSharedPeptidesFromPSMs.py ${output_Folder}/PSMLevelResults/DeepRescore2 ${output_Folder}/PSMLevelResults/DeepRescore2_Remove_SharedPeptides ${output_Folder}/PSMLevelResults/PhosphoRS ${output_Folder}/PSMLevelResults/PhosphoRS_Remove_SharedPeptides

#### PhosphoRS

mkdir -p ${output_Folder}/sitequantResults/PhosphoRS ${output_Folder}/sitequantResults/DeepRescore2

python ${script_Folder}/sitequant/main.py -p ${output_Folder}/PSMLevelResults/PhosphoRS_Remove_SharedPeptides/PhosphoRS.Intensity.txt -o ${output_Folder}/sitequantResults/PhosphoRS/PhosphoRS -f ${fasta_File} --cores 10


python ${script_Folder}/sitequant/main.py -p ${output_Folder}/PSMLevelResults/DeepRescore2_Remove_SharedPeptides/DeepRescore2.Intensity.txt -o ${output_Folder}/sitequantResults/DeepRescore2/DeepRescore2 -f ${fasta_File} --cores 10




